<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--spring中管理的都是无状态的类,不要将有状态的类交给spring管理-->


    <!--有状态就是有数据存储功能。有状态对象(Stateful Bean)，
    就是有实例变量的对象 ，可以保存数据，是非线程安全的。
    在不同方法调用间不保留任何状态。

    无状态就是一次操作，不能保存数据。
    无状态对象(Stateless Bean)，
    就是没有实例变量的对象 不能保存数据，
    是不变类，是线程安全的-->


    <!--id为抽象方法名 class为抽象方法的实现类的绝对路径-->
    <bean id="action" class="com.kaishengit.test.Language"/>
    <!--起别名-->
    <!--<alias name="旧的name名" alias="新的名字"/>-->
    <!--id为任意但推荐使用类名 class为该类的绝对路径-->
    <bean id="person" class="com.kaishengit.test.Person" scope="prototype" lazy-init="true">
        <!--默认为singleton-->
        <!--bean的scope属性设置为prototype的时候 每次从spring中获取的对象都不相同-->

        <!--lazy-init默认为false 让类在调用getBean方法前就创建出类的对象-->
        <!--bean的lazy-init属性为true的时候 ，让类在调用getBean方法时再创建类的对象（懒加载）-->

        <!--name为该类中的方法去get首字母小写 ref是上面抽象方法id的值-->
        <property name="action" ref="action"/>
    </bean>
</beans>